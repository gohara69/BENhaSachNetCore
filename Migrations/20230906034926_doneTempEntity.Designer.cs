// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NhaSachDotNet.Entity;

#nullable disable

namespace NhaSachDotNet.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20230906034926_doneTempEntity")]
    partial class doneTempEntity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("NhaSachDotNet.Entity.ChiTietHoaDon", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"), 1L, 1);

                    b.Property<long>("hoaDonId")
                        .HasColumnType("bigint");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<long>("sachId")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("hoaDonId");

                    b.HasIndex("sachId");

                    b.ToTable("CTHD", (string)null);
                });

            modelBuilder.Entity("NhaSachDotNet.Entity.HoaDon", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("district")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<double>("total")
                        .HasColumnType("float");

                    b.Property<long>("userId")
                        .HasColumnType("bigint");

                    b.Property<string>("ward")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("userId");

                    b.ToTable("HoaDon", (string)null);
                });

            modelBuilder.Entity("NhaSachDotNet.Entity.Sachs", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<double>("giaBan")
                        .HasColumnType("float");

                    b.Property<double>("giaBanDau")
                        .HasColumnType("float");

                    b.Property<string>("gioiThieu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ngonNgu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("soLuong")
                        .HasColumnType("int");

                    b.Property<int>("soTrang")
                        .HasColumnType("int");

                    b.Property<long>("tacgiaid")
                        .HasColumnType("bigint");

                    b.Property<string>("tenSach")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("theLoaiId")
                        .HasColumnType("bigint");

                    b.Property<string>("thumbnail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("theLoaiId");

                    b.ToTable("sach");
                });

            modelBuilder.Entity("NhaSachDotNet.Entity.TheLoai", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("tenTheLoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("theLoai");
                });

            modelBuilder.Entity("NhaSachDotNet.Entity.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("district")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("tokenExpired")
                        .HasColumnType("datetime2");

                    b.Property<string>("ward")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("NhaSachDotNet.Entity.ChiTietHoaDon", b =>
                {
                    b.HasOne("NhaSachDotNet.Entity.HoaDon", "hoaDon")
                        .WithMany("listCTHD")
                        .HasForeignKey("hoaDonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CTHD_HoaDon");

                    b.HasOne("NhaSachDotNet.Entity.Sachs", "sach")
                        .WithMany("listCTHD")
                        .HasForeignKey("sachId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CTHD_Sach");

                    b.Navigation("hoaDon");

                    b.Navigation("sach");
                });

            modelBuilder.Entity("NhaSachDotNet.Entity.HoaDon", b =>
                {
                    b.HasOne("NhaSachDotNet.Entity.User", "user")
                        .WithMany("listHoaDon")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("NhaSachDotNet.Entity.Sachs", b =>
                {
                    b.HasOne("NhaSachDotNet.Entity.TheLoai", "theLoai")
                        .WithMany("dsSach")
                        .HasForeignKey("theLoaiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("theLoai");
                });

            modelBuilder.Entity("NhaSachDotNet.Entity.HoaDon", b =>
                {
                    b.Navigation("listCTHD");
                });

            modelBuilder.Entity("NhaSachDotNet.Entity.Sachs", b =>
                {
                    b.Navigation("listCTHD");
                });

            modelBuilder.Entity("NhaSachDotNet.Entity.TheLoai", b =>
                {
                    b.Navigation("dsSach");
                });

            modelBuilder.Entity("NhaSachDotNet.Entity.User", b =>
                {
                    b.Navigation("listHoaDon");
                });
#pragma warning restore 612, 618
        }
    }
}
